function Life.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 16
pop this 2
push constant 512
pop this 3
push constant 256
pop this 4
push this 4
push this 2
call Math.divide 2
pop this 6
push this 3
push this 2
call Math.divide 2
pop this 5
push pointer 0
push this 0
push this 1
push constant 0
not
call Life.drawCursor 4
pop temp 0
push pointer 0
call Life.init_world 1
pop temp 0
push pointer 0
call Life.display 1
pop temp 0
push pointer 0
return
function Life.step 10
push argument 0
pop pointer 0
push this 6
call Array.new 1
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push this 5
call Array.new 1
pop local 4
push local 0
push local 3
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 7
add
pop pointer 1
push that 0
pop local 5
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 5
lt
not
if-goto WHILE_END1
push local 1
push local 4
add
push local 1
push local 5
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop local 0
label WHILE_EXP2
push local 0
push this 6
push constant 1
sub
lt
not
if-goto WHILE_END2
push local 0
push constant 1
sub
push local 3
add
pop pointer 1
push that 0
pop local 6
push local 0
push local 3
add
pop pointer 1
push that 0
pop local 7
push local 0
push constant 1
add
push local 3
add
pop pointer 1
push that 0
pop local 8
push local 0
push this 7
add
pop pointer 1
push that 0
pop local 9
push constant 1
pop local 1
label WHILE_EXP3
push local 1
push this 5
push constant 1
sub
lt
not
if-goto WHILE_END3
push local 1
push constant 1
sub
push local 6
add
pop pointer 1
push that 0
push local 1
push local 6
add
pop pointer 1
push that 0
add
push local 1
push constant 1
add
push local 6
add
pop pointer 1
push that 0
add
push local 1
push constant 1
sub
push local 7
add
pop pointer 1
push that 0
add
push local 1
push constant 1
add
push local 7
add
pop pointer 1
push that 0
add
push local 1
push constant 1
sub
push local 8
add
pop pointer 1
push that 0
add
push local 1
push local 8
add
pop pointer 1
push that 0
add
push local 1
push constant 1
add
push local 8
add
pop pointer 1
push that 0
add
pop local 2
push local 2
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 9
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 2
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 9
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push local 2
push constant 3
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 9
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 1
pop local 0
label WHILE_EXP4
push local 0
push this 6
push constant 1
sub
lt
not
if-goto WHILE_END4
push local 0
push constant 1
sub
push local 3
add
pop pointer 1
push that 0
pop local 9
push local 9
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push local 3
call Array.dispose 1
pop temp 0
push constant 0
return
function Life.init_world 3
push argument 0
pop pointer 0
push this 6
call Array.new 1
pop this 7
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push this 5
call Array.new 1
pop local 2
push local 0
push this 7
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 5
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Life.display 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push local 0
push this 7
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 5
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
push this 2
call Math.multiply 2
push local 0
push this 2
call Math.multiply 2
push constant 0
not
call Life.drawCursor 4
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 1
push this 2
call Math.multiply 2
push local 0
push this 2
call Math.multiply 2
push constant 0
call Life.drawCursor 4
pop temp 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push this 0
push this 1
push constant 0
not
call Life.drawCursor 4
pop temp 0
push constant 0
return
function Life.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Life.markCell 5
push argument 0
pop pointer 0
push this 0
push this 2
call Math.divide 2
pop local 0
push this 1
push this 2
call Math.divide 2
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push this 6
lt
not
if-goto WHILE_END0
push local 2
push this 7
add
pop pointer 1
push that 0
pop local 4
push constant 0
pop local 3
label WHILE_EXP1
push local 3
push this 5
lt
not
if-goto WHILE_END1
push local 0
push local 3
eq
push local 1
push local 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 4
add
push constant 1
push local 3
push local 4
add
pop pointer 1
push that 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Life.drawCursor 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push this 2
add
push constant 1
sub
push argument 2
push this 2
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Life.moveCursor 1
push argument 0
pop pointer 0
push this 1
push this 2
call Math.divide 2
push this 7
add
pop pointer 1
push that 0
pop local 0
push this 0
push this 2
call Math.divide 2
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 0
push this 1
push constant 0
call Life.drawCursor 4
pop temp 0
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push this 2
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push this 2
sub
pop this 1
goto IF_END2
label IF_FALSE2
push constant 0
pop this 1
label IF_END2
label IF_FALSE1
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push this 3
push this 2
sub
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push this 2
add
pop this 0
goto IF_END4
label IF_FALSE4
push this 3
push this 2
sub
pop this 0
label IF_END4
label IF_FALSE3
push argument 1
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
push this 4
push this 2
sub
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 1
push this 2
add
pop this 1
goto IF_END6
label IF_FALSE6
push this 4
push this 2
sub
pop this 1
label IF_END6
label IF_FALSE5
push argument 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
push this 2
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
push this 2
sub
pop this 0
goto IF_END8
label IF_FALSE8
push constant 0
pop this 0
label IF_END8
label IF_FALSE7
push pointer 0
push this 0
push this 1
push constant 0
not
call Life.drawCursor 4
pop temp 0
push constant 0
return
function Life.run 4
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
push constant 0
pop local 3
push constant 0
pop local 2
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
push local 0
push constant 78
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Life.step 1
pop temp 0
label IF_FALSE1
push local 0
push constant 32
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 2
label IF_FALSE2
push local 0
push constant 131
eq
push local 0
push constant 75
eq
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
pop local 3
label IF_FALSE3
push local 0
push constant 133
eq
push local 0
push constant 74
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 2
pop local 3
label IF_FALSE4
push local 0
push constant 130
eq
push local 0
push constant 72
eq
or
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 3
pop local 3
label IF_FALSE5
push local 0
push constant 132
eq
push local 0
push constant 76
eq
or
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 4
pop local 3
label IF_FALSE6
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 2
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Life.markCell 1
pop temp 0
label IF_FALSE7
push pointer 0
call Life.display 1
pop temp 0
push pointer 0
push local 3
call Life.moveCursor 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
